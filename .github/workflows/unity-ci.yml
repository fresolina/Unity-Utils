name: Unity Package Tests

on:
  push:
    branches: [ main, master, dev ]
  pull_request:
    branches: [ main, master, dev ]

jobs:
  unity-tests:
    name: Unity Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        unity-version:
          - 2022.3.46f1
        test-mode:
          - EditMode
          # - PlayMode

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        path: com.lotecsoftware.utils
        lfs: true

    - name: Cache Unity Library
      uses: actions/cache@v4
      with:
        path: TestProject/Library
        key: Library-${{ matrix.unity-version }}-${{ matrix.test-mode }}-${{ hashFiles('TestProject/Packages/manifest.json') }}
        restore-keys: |
          Library-${{ matrix.unity-version }}-${{ matrix.test-mode }}-
          Library-${{ matrix.unity-version }}-
          Library-

    - name: Create test project
      run: |
        echo "🏗️ Creating Unity test project..."
        # Create project in workspace to avoid permission issues
        mkdir -p TestProject/{Assets,Packages,ProjectSettings}
        
        # Create symlink to package (much faster than copying)
        ln -sf "${{ github.workspace }}/com.lotecsoftware.utils" TestProject/Packages/com.lotecsoftware.utils

        # Create manifest.json that includes our package
        cat > TestProject/Packages/manifest.json << 'EOF'
        {
          "dependencies": {
            "com.lotecsoftware.utils": "file:./com.lotecsoftware.utils",
            "com.unity.test-framework": "1.3.9",
            "com.unity.ugui": "1.0.0"
          },
          "testables": [
            "com.lotecsoftware.utils"
          ]
        }
        EOF
        
        # Create ProjectVersion.txt
        cat > TestProject/ProjectSettings/ProjectVersion.txt << 'EOF'
        m_EditorVersion: ${{ matrix.unity-version }}
        m_EditorVersionWithRevision: ${{ matrix.unity-version }}
        EOF
        
        # Verify project structure
        echo "Workspace:"
        ls -la
        echo "📁 Verifying project structure:"
        ls -la TestProject/
        echo "📦 Packages directory:"
        ls -la TestProject/Packages/
        echo "🔗 Package symlink:"
        ls -la TestProject/Packages/com.lotecsoftware.utils/
        echo "📄 Manifest content:"
        cat TestProject/Packages/manifest.json
        
        echo "✅ Test project created"

    - name: Run Unity Tests
      uses: game-ci/unity-test-runner@v4
      env:
        UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
        UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      with:
        projectPath: TestProject
        unityVersion: ${{ matrix.unity-version }}
        testMode: ${{ matrix.test-mode }}
        artifactsPath: test-results-${{ matrix.test-mode }}
        githubToken: ${{ secrets.GITHUB_TOKEN }}
        checkName: 'Unity Test Results (${{ matrix.test-mode }})'
        coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport'

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: Test results (${{ matrix.test-mode }})
        path: test-results-${{ matrix.test-mode }}
